class Solution {
public:
    bool checkIfPangram(string sentence) {
        if(sentence.size()<26)  return false;
        vector<int> temp(26,0);
        for(int i=0;i<sentence.size();i++)
        {
            temp[sentence[i]-'a']++;
        }
        for(int i=0;i<temp.size();i++)
        {
            if(temp[i]==0)  return false;
        }
        return true;
    }
};
or

class Solution {
public:
    bool checkIfPangram(string sentence) {
        if(sentence.size()<26)  return false;
        set<char> sett;
        for(int i=0;i<sentence.size();i++)
        {
            sett.insert(sentence[i]);
        }
        if(sett.size()<26)  return false;
        else                return true;
    }
};
or
class Solution {
public:
    bool checkIfPangram(string sentence) {
        if(sentence.size()<26)  return false;
        unordered_map<char,int> mpp;;
        for(auto v:sentence)
        {
            mpp[v]++;
        }
        if(mpp.size()<26)  return false;
        else                return true;
    }
};
