class Solution {
public:
    bool isvowel(char ch)
    {
        ch=tolower(ch);
        if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u')
        {
            return true;
        }
        else
        {
            return false;
        }
    
    }
    string reverseVowels(string s) {
        
        int i=0,j=s.length()-1;
        while(i<j)
        {
           while(i<j && isvowel(s[i]) && isvowel(s[j]))
           {
               swap(s[i],s[j]);
               i++;
               j--;
           }
           while(i<j && isvowel(s[i])==false)
           {
               i++;
           }
           while(i<j && isvowel(s[j])==false)
           {
              j--;
           }
        }
        return s;
    }
};
           using unordered set


string reverseVowels(string s) {
    unordered_set<char> vowels = {'a', 'e', 'i', 'o', 'u',
                                  'A', 'E', 'I', 'O', 'U'};
    int left = 0, right = s.length() - 1;

    while (left < right) {
        while (left < right && vowels.find(s[left]) == vowels.end()) {
            left++;
        }
        while (left < right && vowels.find(s[right]) == vowels.end()) {
            right--;
        }

        if (left < right) {
            swap(s[left], s[right]);
            left++;
            right--;
        }
    }

    return s;
}

