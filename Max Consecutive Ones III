class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int i=0,j=0;
        int zeroes=0;
        int maxlength=0;
        while(j<nums.size())
        {
            if(nums[j]==0)  zeroes++;
            while(zeroes>k)
            {
                if(nums[i]==0)  zeroes--;
                i++;                                                      optimal solution  t=2n
                                                                              s=0(1)
            }
            if(zeroes<=k)
            {
                int length=j-i+1;
                maxlength=max(maxlength,length);
                j++;
            }
        }
        return maxlength;
    }
}; 
  brute force solution

class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int largest=0;
        for(int i=0;i<nums.size();i++)
        {
            int zeroes=0;                                      
            for(int j=i;j<nums.size();j++)                                              brute force  t=n*n
                                                                                                         s=0(1)
             {
                if(nums[j]==0) zeroes++;
                if(zeroes<=k)
                {
                    int length=j-i+1;
                    largest=max(largest,length);
                }
                else break;
            }

        }
        return largest;
    }
};
